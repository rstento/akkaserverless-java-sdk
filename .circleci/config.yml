version: 2.1

orbs:
  build-tools: circleci/build-tools@2.9.0

commands:
  checkout-and-merge-to-main:
    steps:
      - checkout
      - run:
          name: Configure git user
          command: |
            # required by merge-with-parent (for some unknown reason)
            git config user.email "circleci@example.com"
            git config user.name "CircleCI"
      - build-tools/merge-with-parent:
          # FIXME change back to main
          parent: sdk-codegen-dev

  install-java-11:
    description: install openjdk-11
    steps:
      - run:
          name: Install java 11
          command: |
            wget https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz -O /tmp/openjdk-11.tar.gz

            sudo mkdir -p /usr/lib/jvm
            sudo tar xfvz /tmp/openjdk-11.tar.gz --directory /usr/lib/jvm
            rm -f /tmp/openjdk-11.tar.gz

            sudo sh -c 'for bin in /usr/lib/jvm/jdk-11.0.8+10/bin/*; do update-alternatives --install /usr/bin/$(basename $bin) $(basename $bin) $bin 100; done'
            sudo sh -c 'for bin in /usr/lib/jvm/jdk-11.0.8+10/bin/*; do update-alternatives --set $(basename $bin) $bin; done'

  setup_sbt:
    description: "Set up sbt"
    parameters:
      version:
        type: string
        default: "1.4.9"
    steps:
      - install-java-11
      - run:
          name: Install sbt
          command: |
            curl -L -o sbt-<< parameters.version >>.deb https://repo.scala-sbt.org/scalasbt/debian/sbt-<< parameters.version >>.deb
            sudo dpkg -i sbt-<< parameters.version >>.deb
            rm sbt-<< parameters.version >>.deb

  save_deps_cache:
    description: "Save dependency cache"
    steps:
      - save_cache:
          key: deps-cache-01
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.cache/coursier"
            - "~/.m2"

  restore_deps_cache:
    description: "Restore dependency cache"
    steps:
      - restore_cache:
          key: deps-cache-01

  set-sdk-version: 
    description: "Grab current SDK version"
    steps: 
      - run: 
          name: "Set SDK version"
          command: |
            # tail 2 + head 1 because CircleCI adds an extra line
            # the SDK_VERSION is later used to run the maven tests (see below)
            echo 'export SDK_VERSION='`sbt "print sdk/version" | tail -n 2 | head -n 1` >> $BASH_ENV

  build-maven-java:
    description: Build maven-java
    steps:
      - run:
          name: publish m2
          command: sbt codegenJava/publishM2
      - run:
          name: "Build maven-java"
          command: |
            cd maven-java
            echo "Running maven-java with SDK version: '$SDK_VERSION'"
            mvn versions:set -DnewVersion=$SDK_VERSION
            mvn verify install
jobs:
  checks:
    docker:
      - image: cimg/openjdk:11.0
    description: "Checks"
    steps:
      - checkout-and-merge-to-main
      - setup_sbt
      - restore_deps_cache
      - run:
          name: Run scalafmt checks
          command: |
            sbt scalafmtCheckAll scalafmtSbtCheck || \
              { echo "[error] Code not formatted prior to commit. Run 'sbt scalafmtAll scalafmtSbt' then commit the reformatted code."; false; }
      - run:
          name: Run javafmt checks
          command: |
            sbt javafmtCheckAll || \
              { echo "[error] Code not formatted prior to commit. Run 'sbt javafmtAll' then commit the reformatted code."; false; }
      - run:
          name: Run header checks
          command: |
            sbt headerCheckAll || \
              { echo "[error] Code missing headers prior to commit. Run 'sbt headerCreateAll' then commit the updated code."; false; }
      - save_deps_cache

  tests:
    docker:
      - image: cimg/openjdk:11.0
    description: "Tests"
    steps:
      - checkout-and-merge-to-main
      - setup_sbt
      - restore_deps_cache
      - run:
          name: Run tests
          command: sbt test
      - save_deps_cache

  integration-tests:
    machine: true
    description: "Integration tests"
    steps:
      - checkout-and-merge-to-main
      - setup_sbt
      - restore_deps_cache
      - run:
          name: Run integration tests
          # FIXME enable again
          #command: docker-compose -f .circleci/google-pubsub-emulator-docker-compose.yml up -d && sbt samples/It/test
          command: sbt compile
      - save_deps_cache

  tck-tests:
    machine: true
    description: "TCK tests"
    steps:
      - checkout-and-merge-to-main
      - setup_sbt
      - restore_deps_cache
      - run:
          name: Run TCK tests
          command: sbt tck/Test/run
      - save_deps_cache

  validate-docs:
    machine: true
    description: "Validate docs"
    steps:
      - checkout-and-merge-to-main
      - setup_sbt
      - restore_deps_cache
      - run:
          name: Validate docs
          command: make -C docs
      - save_deps_cache
     

  maven-java-tests:
    machine: true
    description: "Maven Java (plugin and archetype tests)"
    steps:
      - checkout-and-merge-to-main
      - restore_deps_cache
      - set-sdk-version
      - setup_sbt
      - run: 
          name: publish m2
          command: sbt publishM2
      - build-maven-java
      - run: 
          name: Run integration tests for Value Entity Archetype
          command: |
            cd maven-java
            mvn -B archetype:generate -DgroupId=com.example -DartifactId=counter-value-entity -DarchetypeGroupId=com.akkaserverless -DarchetypeArtifactId=akkaserverless-maven-archetype -DarchetypeVersion=$SDK_VERSION
            cd counter-value-entity
            mvn -B -Dakkaserverless-sdk.version=$SDK_VERSION compile
      - run: 
          name: Run integration tests for Event Sourced Entity Archetype
          command: |
            cd maven-java
            mvn -B archetype:generate  -DgroupId=com.example -DartifactId=counter-event-sourced-entity -DarchetypeGroupId=com.akkaserverless -DarchetypeArtifactId=akkaserverless-maven-archetype-event-sourced-entity -DarchetypeVersion=$SDK_VERSION
            cd counter-event-sourced-entity
            mvn -B -Dakkaserverless-sdk.version=$SDK_VERSION compile
      - save_deps_cache

  samples-tests:
    machine: true
    description: "Maven Samples Integreation Tests"
    steps:
      - checkout-and-merge-to-main
      - setup_sbt
      - restore_deps_cache
      - set-sdk-version
      - run: 
          name: publish m2
          command: sbt publishM2
      - build-maven-java
      - run:
          name: Run integration tests for Shopping Cart Value Entity sample
          command: |
            cd samples/java-valueentity-shopping-cart
            echo "Running mvn with SDK version: '$SDK_VERSION' - FIXME disabled for codegen/API work"
            # FIXME re-enable this test
            # mvn -Dakkaserverless-sdk.version=$SDK_VERSION -Dakkaserverless-maven-plugin.version=$SDK_VERSION verify -Pit
      - run:
          name: Run integration tests for Shopping Cart Event Sourced Entity sample
          command: |
            cd samples/java-eventsourced-shopping-cart
            echo "Running mvn with SDK version: '$SDK_VERSION' - FIXME only test compilation for codegen/API work"
            # FIXME re-enable this test
            # mvn -Dakkaserverless-sdk.version=$SDK_VERSION -Dakkaserverless-maven-plugin.version=$SDK_VERSION verify -Pit
            mvn -Dakkaserverless-sdk.version=$SDK_VERSION -Dakkaserverless-maven-plugin.version=$SDK_VERSION verify
      - run: 
          name: Run integration tests for Counter Value Entity sample
          command: |
            cd samples/valueentity-counter
            echo "Running mvn with SDK version: '$SDK_VERSION' - FIXME disabled for codegen/API work"
            mvn -Dakkaserverless-sdk.version=$SDK_VERSION -Dakkaserverless-maven-plugin.version=$SDK_VERSION test-compile verify -Pit
      - run:
          name: Run integration tests for Counter Replicated Entity sample
          command: |
            cd samples/replicatedentity-counter
            echo "Running mvn with SDK version: '$SDK_VERSION' - FIXME disabled for codegen/API work"
            # mvn -Dakkaserverless-sdk.version=$SDK_VERSION -Dakkaserverless-maven-plugin.version=$SDK_VERSION verify -Pit
      - save_deps_cache

  publish:
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout
      - setup_sbt
      - restore_deps_cache
      - run: sbt ci-release
      - save_deps_cache

  publish-maven:
    docker:
      - image: circleci/openjdk:8
    steps:
      - checkout
      - restore_deps_cache
      - set-sdk-version
      - run:
          name: Publish maven plugin and archetype
          command: |
            cd maven-java
            echo $PGP_SECRET | base64 -d | gpg --import --batch
            # It seems ~/.m2 is not actually restored from the cache?
            mkdir -p ~/.m2
            cat >~/.m2/settings.xml \<<EOF;
            <settings xmlns="http://maven.apache.org/SETTINGS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">
            <servers>
              <server>
                <id>ossrh</id>
                <username>$SONATYPE_USERNAME</username>
                <password>$SONATYPE_PASSWORD</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>ossrh</id>
                <activation>
                  <activeByDefault>true</activeByDefault>
                </activation>
                <properties>
                  <gpg.passphrase>$PGP_PASSPHRASE</gpg.passphrase>
                </properties>
              </profile>
            </profiles>
            </settings>
            EOF
            mvn -B versions:set -DnewVersion=$SDK_VERSION
            mvn -P release -B deploy

  publish-tck:
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout
      - setup_remote_docker
      - setup_sbt
      - restore_deps_cache
      - run: bin/docker-login-public-gcr.sh
      - run: sbt tck/Docker/publish
      - save_deps_cache

  publish-docs:
    machine: true
    steps:
      - checkout
      - setup_sbt
      - restore_deps_cache
      # deploy key for pushing docs to branch
      - add_ssh_keys:
          fingerprints:
            - "fd:fd:d3:9d:88:2c:df:5c:5d:b9:c0:2f:43:c6:b8:82"
      - run:
          name: Publish docs
          command: make -C docs deploy
      - save_deps_cache

workflows:
  CI:
    jobs:
      - checks:
          filters: # required since publish jobs have tag filters and dependencies
            tags:
              only: /.*/
      - tests:
          filters: # required since publish jobs have tag filters and dependencies
            tags:
              only: /.*/
      - integration-tests:
          filters: # required since publish jobs have tag filters and dependencies
            tags:
              only: /.*/          
      - maven-java-tests:
          filters: # required since publish jobs have tag filters and dependencies
            tags:
              only: /.*/ 
      - samples-tests:
          filters: # required since publish jobs have tag filters and dependencies
            tags:
              only: /.*/ 
      - tck-tests:
          filters: # required since publish jobs have tag filters and dependencies
            tags:
              only: /.*/
      - validate-docs:
          filters: # required since publish jobs have tag filters and dependencies
            tags:
              only: /.*/
      - publish:
          filters: # version tags only
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - checks
            - tests
            - integration-tests
            - maven-java-tests
            - samples-tests    
            - tck-tests
            - validate-docs   
      - publish-maven:
          filters: # version tags only
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - checks
            - tests
            - integration-tests
            - maven-java-tests
            - samples-tests    
            - tck-tests
            - validate-docs   
      - publish-tck:
          filters: # version tags only
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - checks
            - tests
            - integration-tests
            - tck-tests
            - validate-docs
      - publish-docs:
          filters: # version tags only
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - checks
            - tests
            - integration-tests
            - tck-tests
            - validate-docs
